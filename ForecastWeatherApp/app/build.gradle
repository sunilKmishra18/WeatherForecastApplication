apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.sunilmishra.android.forecastweatherapp"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // export the room schema, so we can use it for testing
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_KEY', keystoreProperties['weatherAPIKey']
        }
        debug {
            buildConfigField 'String', 'API_KEY', keystoreProperties['weatherAPIKey']
        }
    }

    androidExtensions {
        experimental = true
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/utils'
        test {
            java.srcDirs += "$projectDir/$sharedTestDir"
        }
        androidTest {
            java.srcDirs += "$projectDir/$sharedTestDir"
            resources.srcDirs += "src/test/resources"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.core:core-ktx:$androidx_core_ktx_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding_version"
    implementation "com.github.pwittchen:reactivenetwork-rx2:$reactivenetwork_rx2_version"

    // Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"


    // Dagger
    //noinspection OutdatedLibrary
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    //Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    //testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "android.arch.core:core-testing:$core_testing_version"

    // Test helpers for Room
    testImplementation "androidx.room:room-testing:$room_version"

    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlin_version"
    testImplementation "androidx.test.ext:junit:1.1.1"
    testImplementation "io.mockk:mockk:$mockk_version"

    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "android.arch.core:core-testing:$core_testing_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$androidxTest_version"
    androidTestImplementation "androidx.test:rules:$androidxTestRules_version"
}
